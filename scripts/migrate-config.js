#!/usr/bin/env node

/**
 * Script de migra√ß√£o de configura√ß√£o
 * Ajuda a migrar de configura√ß√µes manuais para o novo sistema autom√°tico
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const envPath = path.join(process.cwd(), '.env');
const envExamplePath = path.join(process.cwd(), '.env.example');

console.log('üîÑ Script de Migra√ß√£o de Configura√ß√£o do Supabase\n');

// Verifica se .env j√° existe
if (fs.existsSync(envPath)) {
  console.log('‚úÖ Arquivo .env j√° existe!');
  
  // L√™ o conte√∫do atual
  const envContent = fs.readFileSync(envPath, 'utf8');
  
  // Verifica se j√° tem as vari√°veis do Supabase
  if (envContent.includes('VITE_SUPABASE_URL') && envContent.includes('VITE_SUPABASE_ANON_KEY')) {
    console.log('‚úÖ Vari√°veis do Supabase j√° est√£o configuradas!\n');
    console.log('üéâ N√£o √© necess√°ria nenhuma a√ß√£o. O sistema usar√° automaticamente suas configura√ß√µes.');
  } else {
    console.log('‚ö†Ô∏è  Vari√°veis do Supabase n√£o encontradas no .env\n');
    console.log('Voc√™ deseja adicionar as vari√°veis padr√£o do Supabase? (s/n)');
    
    rl.question('> ', (answer) => {
      if (answer.toLowerCase() === 's' || answer.toLowerCase() === 'sim') {
        // Adiciona as vari√°veis ao .env existente
        const supabaseConfig = `
# Configura√ß√£o do Supabase
VITE_SUPABASE_URL=https://fvobspjiujcurfugjsxr.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ2b2JzcGppdWpjdXJmdWdqc3hyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgxMzA3OTcsImV4cCI6MjA3MzcwNjc5N30.FUWbuvg-Oalt3HiZX6YSjR609SFFkgleEJbFUJ9AFZ8
`;
        
        fs.appendFileSync(envPath, supabaseConfig);
        console.log('\n‚úÖ Vari√°veis do Supabase adicionadas ao .env!');
        console.log('üéâ Configura√ß√£o conclu√≠da! Reinicie o servidor para aplicar as mudan√ßas.');
      } else {
        console.log('\nüìù Para configurar manualmente, adicione as seguintes vari√°veis ao seu .env:');
        console.log('VITE_SUPABASE_URL=https://seu-projeto.supabase.co');
        console.log('VITE_SUPABASE_ANON_KEY=sua-chave-anonima');
      }
      rl.close();
    });
  }
} else {
  // .env n√£o existe, cria a partir do .env.example
  console.log('üìã Arquivo .env n√£o encontrado.');
  
  if (fs.existsSync(envExamplePath)) {
    console.log('‚úÖ Arquivo .env.example encontrado!\n');
    console.log('Deseja criar o .env a partir do .env.example? (s/n)');
    
    rl.question('> ', (answer) => {
      if (answer.toLowerCase() === 's' || answer.toLowerCase() === 'sim') {
        fs.copyFileSync(envExamplePath, envPath);
        console.log('\n‚úÖ Arquivo .env criado com sucesso!');
        console.log('üéâ Configura√ß√£o conclu√≠da! Agora voc√™ pode iniciar o servidor.');
        console.log('\nüí° Dica: Para usar suas pr√≥prias credenciais, edite o arquivo .env');
      } else {
        console.log('\nüìù Para criar manualmente, execute:');
        console.log('cp .env.example .env');
        console.log('\nDepois edite o arquivo com suas credenciais.');
      }
      rl.close();
    });
  } else {
    console.log('‚ùå Arquivo .env.example n√£o encontrado!');
    console.log('\nüìù Crie um arquivo .env na raiz do projeto com:');
    console.log('VITE_SUPABASE_URL=https://seu-projeto.supabase.co');
    console.log('VITE_SUPABASE_ANON_KEY=sua-chave-anonima');
    rl.close();
  }
}

// Limpeza de configura√ß√µes antigas do localStorage
console.log('\nüßπ Verificando configura√ß√µes antigas...');

// Nota: Este script n√£o pode acessar o localStorage diretamente
// Mas podemos adicionar um c√≥digo para ser executado no navegador
const cleanupCode = `
// Execute este c√≥digo no console do navegador para limpar configura√ß√µes antigas:
localStorage.removeItem('TEMP_SUPABASE_URL');
localStorage.removeItem('TEMP_SUPABASE_ANON_KEY');
localStorage.removeItem('OFFLINE_MODE');
console.log('‚úÖ Configura√ß√µes antigas removidas!');
`;

console.log('\nüí° Para limpar configura√ß√µes antigas do navegador, execute no console:');
console.log(cleanupCode);